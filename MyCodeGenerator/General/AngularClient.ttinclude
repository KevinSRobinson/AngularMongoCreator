<#+
            
    public class CodeHelper
    {
        protected static CodeClass _codeClass;

        public CodeHelper(CodeClass codeClass){
            _codeClass = codeClass;
        }
            
        public string Plural {get{
                return _codeClass.Name + "s";
            }}

        public string Name { get{
                return _codeClass.Name;
            }}
        public string CamelCasePlural {
            get{
                return CamelCase + "s";
            }}
        public string CamelCase {
            get{
                return GetCamelcaseClassName(_codeClass);
            }}


        private static string GetCamelcaseClassName(CodeClass codeClass)
        {
            return GetCamelcaseClassName(codeClass.Name);
        }
        private static string GetCamelcaseClassName(string className)
        {
            string returnString = className.ToLower();
            returnString = Char.ToLowerInvariant(className[0]) + className.Substring(1);
            return returnString;
        }
    }



        public class Component {
            public CodeHelper _;
            private string _name   ;

            public Component(CodeHelper helper, string name){
                _ = helper;
                _name = name;
            }

            public string FileName 
                { get
                {
                     return ComponentName + ".js";
                }
            }
            public string ComponentName 
                { get
                {
                    return _.CamelCase + _name;
                }
            }
            public string TemplateUrl 
                { get
                {
                return string.Format("{0}/{1}/{2}", Angular_Features_Path, _.Name, ComponentName);
                }
            }

            //public string Get_Feature_Component_Path(string componentName){
                    //return string.Format("{0}/{1}/{2}/", Angular_Features_Path, Helper.Name, componentName);
            //}
        
        }


        public class DataService{

            public CodeHelper _;

            public DataService(CodeHelper helper){
               _ = helper;
            }

            public string FileName 
                { get
                {
                    return ServiceName + ".js";
                }
            }

            public string ServiceName 
                { get
                {
                    return _.Name + "DataService";
                }
            }



        }


         public class Modals{

            public CodeHelper _;

            public Modals(CodeHelper helper){
                _ = helper;
            }

            public string FileName 
                { get
                {
                    return ServiceName + ".js";
                }
            }

            public string ServiceName 
                { get
                {
                    return _.Name + "ModalService";
                }
            }



        }


        public class Feature  {
            
            public CodeHelper _;
            public Component ListComponent;
            public DataService DataService;
            public Modals Modals;

            public Feature(CodeClass codeClass){
                 _ = new CodeHelper(codeClass);
                 ListComponent = new Component(_, "List");
                 DataService = new DataService(_);
                 Modals = new Modals(_);


                  //Components
                //ListComponentFilePath = string.Format("{0}Components/",FeaturePath);
                //ListComponentName = string.Format("{0}List",_codeClassHelper.CamelCasePlural);
                //ListComponentFileName = string.Format("{0}.js",ListComponentName);
                //ListComponentTemplateFileName = string.Format("{0}.html", ListComponentName);
                //ListComponentTemplateUrl = string.Format("src/Client/{0}Components/{2}", FeaturePath, codeClassHelper.Plural, ListComponentTemplateFileName);
                //ListComponentTag = GetComponentTag(ListComponentName);
            }



            //Components
            //public string Get_Feature_Component_Path(string componentName){
                    //return string.Format("{0}/{1}/{2}/", Angular_Features_Path, Helper.Name, componentName);
            //}
//
            //public string Get_Feature_Component_Name(string componentName){
                //return string.Format("{0}{1}.js", Helper.Name, componentName);
            //}
//
             //private string GetComponentTag(string componentName){
                //var output = "";
                //foreach (char letter in componentName)
                //{
                   //if (Char.IsUpper(letter) && output.Length > 0)
                     //output += "-" + letter;
                   //else
                     //output += letter;
                //}
                //return string.Format("<{0}></{0}>", output.ToLower());
                //}     
            //}
//
//
         


            //Components
            //public string ListComponentFilePath  ="";
            //public string ListComponentName ="";
            //public string ListComponentFileName  = "";
            //public string ListComponentTag = "";
            //public string ListComponentTemplateFileName  = "";
            //public string ListComponentTemplateUrl = "";
            

        }
  

       public class AngularClient  {


        private CodeClassHelper _codeClassHelper;

        public string ServiceName  = "";  
        public string ServiceFileName   = ""; 
        public string FeaturePath = "";
        public string StylesPath = "";
        public string ViewsPath  = "";

        //Modals
        public string ModalsFilePath = "";
        public string ModifyModalController = "";

        public string ModalServiceName ="";
        public string ModifyModalControllerFileName  = "";
        public string ModalServiceNameFileName ="";
        public string ModifyModalTemplateFileName = "";


        //Components
        public string ListComponentFilePath  ="";
        public string ListComponentName ="";
        public string ListComponentFileName  = "";
        public string ListComponentTag = "";
        public string ListComponentTemplateFileName  = "";
        public string ListComponentTemplateUrl = "";


        //login
        public string LoginComponentFilePath = "";
        public string LoginComponentTemplateUrl = "";

        //Index View
        public string IndexTemplateUrl = "";


      



        public AngularClient(CodeClassHelper codeClassHelper){


            _codeClassHelper =codeClassHelper;


            //Main features path
            FeaturePath = "Features/" + _codeClassHelper.Plural + "/";
            ViewsPath = FeaturePath + "/Views/";
            

            //DataServices
            ServiceName  = _codeClassHelper.CamelCasePlural + "Service";  
            ServiceFileName  = ServiceName + ".js"; 


            //Modals
            ModalsFilePath = string.Format("{0}{1}/", FeaturePath , "Modals"); 
            ModalServiceName    =  string.Format("{0}ModalService", codeClassHelper.CamelCasePlural);
            ModalServiceNameFileName    =  string.Format("{0}.js", ModalServiceName);
            ModifyModalController =  string.Format("modify{0}ModalController", codeClassHelper.Name);
            ModifyModalControllerFileName = string.Format("{0}.js", ModifyModalController);
            ModifyModalTemplateFileName = string.Format("{0}Template.html", ModifyModalController);

           

            //Components
            ListComponentFilePath = string.Format("{0}Components/",FeaturePath);
            ListComponentName = string.Format("{0}List",_codeClassHelper.CamelCasePlural);
            ListComponentFileName = string.Format("{0}.js",ListComponentName);
            ListComponentTemplateFileName = string.Format("{0}.html", ListComponentName);
            ListComponentTemplateUrl = string.Format("src/Client/{0}Components/{2}", FeaturePath, codeClassHelper.Plural, ListComponentTemplateFileName);
            ListComponentTag = GetComponentTag(ListComponentName);

           
            //main index view
            IndexTemplateUrl = string.Format("Features/{0}/Views/index.html", codeClassHelper.Plural);
            

        }

     private string GetComponentTag(string componentName){
            
            var output = "";
            foreach (char letter in componentName)
            {
               if (Char.IsUpper(letter) && output.Length > 0)
                 output += "-" + letter;
               else
                 output += letter;
            }
            return string.Format("<{0}></{0}>", output.ToLower());
        }  
   
    }

 #>