<#+
            

          public class Feature  {
            
            public CodeHelper _;
            public Component ListComponent;
            public DataService DataService;
            public Modals Modals;

            public string BasePath = "";
            public string FeaturesBasePath = ""; 

            public Feature(CodeClass codeClass, string basePath){
                 _ = new CodeHelper(codeClass);

                 //Construct the Features Base Base
                 FeaturesBasePath = basePath + "/src/client/";
                
                 //Create a new Features Item
                 ListComponent = new Component(_, "List", FeaturesBasePath);

                 //Create a new Modals Item
                 Modals = new Modals(_, FeaturesBasePath);
                
                 //Create a new DataServices Item
                 DataService = new DataService(_, FeaturesBasePath);
                 
                 BasePath = basePath;            
            }            




        }
  
   


        public class Component {
            public CodeHelper _;
            private string _name;
            private string _basePath = "";
            private string _path = "";  
            private string _componentName = "";
            private string _fileName = "";
            private string _templateUrl = "";  
            private string _templateFileName = "";  
            private string _fullPath = "";  

            public Component(CodeHelper helper, string name, string basePath){
                _ = helper;
                _name = name;
                _basePath = basePath;
                _componentName = _.CamelCase + _name;
                _templateFileName = _componentName + ".html";
                _fileName = _componentName + ".js";

                //build the relative path to the Component
                _path = string.Format("Features/{1}/Components/{2}/", basePath, _.Plural, _componentName);

                //build the full path to the Component
                _fullPath = string.Format("{0}/{1}/", basePath, _path);
                
                //build the Url for to the Tempalte              
                _templateUrl = string.Format("{0}{1}", _path, TemplateFileName);               
            }
            public string FullPath { get { return _fullPath; }}

            public string Path { get { return _path; }}
 
            public string FileName { get { return _fileName; }}

            public string ComponentName { get  { return _componentName;  }}

            public string TemplateUrl { get { return _templateUrl; }}
                    
            public string TemplateFileName { get { return _templateFileName; }}            
        
        }


        public class DataService{

            public CodeHelper _;
            public string BasePath = "";

            public DataService(CodeHelper helper, string basePath){
               _ = helper;
            BasePath = basePath;
            }
            
            public string Path 
                { get
                {
                    return BasePath + "DataServices/";;
                }
            }

            public string FileName 
                { get
                {
                    return ServiceName + ".js";
                }
            }

            public string ServiceName 
                { get
                {
                    return _.Name + "DataService";
                }
            }
            
                        

         }


        public class Modals{

            public CodeHelper _;
            
            public string Name {get; set;}
            public string BasePath {get; set;}
            public string FullPath {get; set;}
            public string Path {get; set;}
            public string ServiceName {get; set;}
            public string ServiceFileName {get; set;}
            public string ModifyTemplateFileName {get; set;}
            public string ModifyController {get; set;}
            public string ModifyTemplateUrl {get; set;}
            public string ModifyControllerFileName {get; set;}
            

            public Modals(CodeHelper helper, string basePath){
                _ = helper;

                BasePath = basePath;

                //build the relative path to the Component
                Path = string.Format("Features/{0}/Modals/", _.Plural);

                //build the full path to the Component
                FullPath = string.Format("{0}/{1}/", basePath, Path);

                ServiceName = string.Format("{0}ModalService", _.Name);
                ServiceFileName = string.Format("{0}.js", ServiceName);
            
                ModifyTemplateFileName = string.Format("modify{0}ModalTemplate.html", _.Name);
                ModifyTemplateUrl = string.Format("{0}{1}", Path, ModifyTemplateFileName);

                ModifyController = string.Format("modify{0}ModalController", _.Name);
                ModifyControllerFileName = string.Format("{0}.js", ModifyController);
             
            }



        }


      


 private string GetComponentTag(string componentName){
            
            var output = "";
            foreach (char letter in componentName)
            {
               if (Char.IsUpper(letter) && output.Length > 0)
                 output += "-" + letter;
               else
                 output += letter;
            }
            return string.Format("<{0}></{0}>", output.ToLower());
        }  
   

       


 #>