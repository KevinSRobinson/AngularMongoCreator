
<#+ void GenerateApis(CodeClassHelper helper){ #>     

     var _ = require('lodash');
     var <#=helper.Name#>= require('../models/<#=helper.CamelCasePlural#>Model.js');
     var mongoose = require('mongoose');

     module.exports = function (app) {

       var create = function (req, res) {

         function save(err) {
           if (err) {
             res.json({
               info: 'error during <#=helper.CamelCase#> create',
               error: err
             });
           }
           res.json({
             info: '<#=helper.CamelCase#> created successfully',
             data: new<#=helper.CamelCase#>
           });
         };

         var new<#=helper.CamelCase#> = new <#=helper.CamelCase#>(req.body);
         new<#=helper.CamelCase#>.save(save);
       };

       var read = function (req, res) {

         function get(err, <#=helper.CamelCase#>s) {
           if (err) {
             res.json({
               info: 'error during find <#=helper.CamelCase#>s',
               error: err
             });
           }
           res.json({
             info: '<#=helper.CamelCase#>s found successfully',
             data: <#=helper.CamelCase#>s
           });
         };

         <#=helper.CamelCase#>.find(get);
       };

       var update = function (req, res) {

         function find(err, <#=helper.CamelCase#>) {
           if (err) {
             res.json({
               info: 'error during find <#=helper.CamelCase#>',
               error: err
             });
           }
           if (<#=helper.CamelCase#>) {
             _.merge(<#=helper.CamelCase#>, req.body);
             <#=helper.CamelCase#>.save(function (err) {
               if (err) {
                 res.json({
                   info: 'error during update <#=helper.CamelCase#>',
                   error: err
                 });
               }
               res.json({
                 info: '<#=helper.CamelCase#> updated successfully'
               });
             });
           } else {
             res.json({
               info: '<#=helper.CamelCase#> not found'
             });
           }
         };

         <#=helper.CamelCase#>.findById(req.params.id, find);
       };

       var del = function (req, res) {
         <#=helper.CamelCase#>.findByIdAndRemove(req.params.id, function (err) {
           if (err) {
             res.json({
               info: 'error during remove <#=helper.CamelCase#>'
             });
           }
           res.json({
             info: '<#=helper.CamelCase#> removed successfully'
           });
         });
       };

       app.post('/<#=helper.CamelCase#>s', create);
       app.get('/<#=helper.CamelCase#>s', read);
       app.put('/<#=helper.CamelCase#>s/:id', update);
       app.delete('/<#=helper.CamelCase#>s/:id', del);

     };
















<#+
    CreateDirectoryFullPath(NodeApisPath);
    CreateFile(NodeApisPath + helper.CamelCasePlural + "Api.js");
	}	
#>